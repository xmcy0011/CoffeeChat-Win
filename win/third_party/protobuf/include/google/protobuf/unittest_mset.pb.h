// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/protobuf/unittest_mset.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_google_2fprotobuf_2funittest_5fmset_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_google_2fprotobuf_2funittest_5fmset_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3013000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3013000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "google/protobuf/unittest_mset_wire_format.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2funittest_5fmset_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_google_2fprotobuf_2funittest_5fmset_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[5]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_google_2fprotobuf_2funittest_5fmset_2eproto;
namespace protobuf_unittest {
class RawMessageSet;
class RawMessageSetDefaultTypeInternal;
extern RawMessageSetDefaultTypeInternal _RawMessageSet_default_instance_;
class RawMessageSet_Item;
class RawMessageSet_ItemDefaultTypeInternal;
extern RawMessageSet_ItemDefaultTypeInternal _RawMessageSet_Item_default_instance_;
class TestMessageSetContainer;
class TestMessageSetContainerDefaultTypeInternal;
extern TestMessageSetContainerDefaultTypeInternal _TestMessageSetContainer_default_instance_;
class TestMessageSetExtension1;
class TestMessageSetExtension1DefaultTypeInternal;
extern TestMessageSetExtension1DefaultTypeInternal _TestMessageSetExtension1_default_instance_;
class TestMessageSetExtension2;
class TestMessageSetExtension2DefaultTypeInternal;
extern TestMessageSetExtension2DefaultTypeInternal _TestMessageSetExtension2_default_instance_;
}  // namespace protobuf_unittest
PROTOBUF_NAMESPACE_OPEN
template<> ::protobuf_unittest::RawMessageSet* Arena::CreateMaybeMessage<::protobuf_unittest::RawMessageSet>(Arena*);
template<> ::protobuf_unittest::RawMessageSet_Item* Arena::CreateMaybeMessage<::protobuf_unittest::RawMessageSet_Item>(Arena*);
template<> ::protobuf_unittest::TestMessageSetContainer* Arena::CreateMaybeMessage<::protobuf_unittest::TestMessageSetContainer>(Arena*);
template<> ::protobuf_unittest::TestMessageSetExtension1* Arena::CreateMaybeMessage<::protobuf_unittest::TestMessageSetExtension1>(Arena*);
template<> ::protobuf_unittest::TestMessageSetExtension2* Arena::CreateMaybeMessage<::protobuf_unittest::TestMessageSetExtension2>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace protobuf_unittest {

// ===================================================================

class TestMessageSetContainer PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf_unittest.TestMessageSetContainer) */ {
 public:
  inline TestMessageSetContainer() : TestMessageSetContainer(nullptr) {}
  virtual ~TestMessageSetContainer();

  TestMessageSetContainer(const TestMessageSetContainer& from);
  TestMessageSetContainer(TestMessageSetContainer&& from) noexcept
    : TestMessageSetContainer() {
    *this = ::std::move(from);
  }

  inline TestMessageSetContainer& operator=(const TestMessageSetContainer& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestMessageSetContainer& operator=(TestMessageSetContainer&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TestMessageSetContainer& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TestMessageSetContainer* internal_default_instance() {
    return reinterpret_cast<const TestMessageSetContainer*>(
               &_TestMessageSetContainer_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(TestMessageSetContainer& a, TestMessageSetContainer& b) {
    a.Swap(&b);
  }
  inline void Swap(TestMessageSetContainer* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestMessageSetContainer* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TestMessageSetContainer* New() const final {
    return CreateMaybeMessage<TestMessageSetContainer>(nullptr);
  }

  TestMessageSetContainer* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TestMessageSetContainer>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TestMessageSetContainer& from);
  void MergeFrom(const TestMessageSetContainer& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TestMessageSetContainer* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "protobuf_unittest.TestMessageSetContainer";
  }
  protected:
  explicit TestMessageSetContainer(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_google_2fprotobuf_2funittest_5fmset_2eproto);
    return ::descriptor_table_google_2fprotobuf_2funittest_5fmset_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMessageSetFieldNumber = 1,
  };
  // optional .proto2_wireformat_unittest.TestMessageSet message_set = 1;
  bool has_message_set() const;
  private:
  bool _internal_has_message_set() const;
  public:
  void clear_message_set();
  const ::proto2_wireformat_unittest::TestMessageSet& message_set() const;
  ::proto2_wireformat_unittest::TestMessageSet* release_message_set();
  ::proto2_wireformat_unittest::TestMessageSet* mutable_message_set();
  void set_allocated_message_set(::proto2_wireformat_unittest::TestMessageSet* message_set);
  private:
  const ::proto2_wireformat_unittest::TestMessageSet& _internal_message_set() const;
  ::proto2_wireformat_unittest::TestMessageSet* _internal_mutable_message_set();
  public:
  void unsafe_arena_set_allocated_message_set(
      ::proto2_wireformat_unittest::TestMessageSet* message_set);
  ::proto2_wireformat_unittest::TestMessageSet* unsafe_arena_release_message_set();

  // @@protoc_insertion_point(class_scope:protobuf_unittest.TestMessageSetContainer)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::proto2_wireformat_unittest::TestMessageSet* message_set_;
  friend struct ::TableStruct_google_2fprotobuf_2funittest_5fmset_2eproto;
};
// -------------------------------------------------------------------

class TestMessageSetExtension1 PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf_unittest.TestMessageSetExtension1) */ {
 public:
  inline TestMessageSetExtension1() : TestMessageSetExtension1(nullptr) {}
  virtual ~TestMessageSetExtension1();

  TestMessageSetExtension1(const TestMessageSetExtension1& from);
  TestMessageSetExtension1(TestMessageSetExtension1&& from) noexcept
    : TestMessageSetExtension1() {
    *this = ::std::move(from);
  }

  inline TestMessageSetExtension1& operator=(const TestMessageSetExtension1& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestMessageSetExtension1& operator=(TestMessageSetExtension1&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TestMessageSetExtension1& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TestMessageSetExtension1* internal_default_instance() {
    return reinterpret_cast<const TestMessageSetExtension1*>(
               &_TestMessageSetExtension1_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(TestMessageSetExtension1& a, TestMessageSetExtension1& b) {
    a.Swap(&b);
  }
  inline void Swap(TestMessageSetExtension1* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestMessageSetExtension1* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TestMessageSetExtension1* New() const final {
    return CreateMaybeMessage<TestMessageSetExtension1>(nullptr);
  }

  TestMessageSetExtension1* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TestMessageSetExtension1>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TestMessageSetExtension1& from);
  void MergeFrom(const TestMessageSetExtension1& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TestMessageSetExtension1* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "protobuf_unittest.TestMessageSetExtension1";
  }
  protected:
  explicit TestMessageSetExtension1(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_google_2fprotobuf_2funittest_5fmset_2eproto);
    return ::descriptor_table_google_2fprotobuf_2funittest_5fmset_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTestAliasingFieldNumber = 17,
    kRecursiveFieldNumber = 16,
    kIFieldNumber = 15,
  };
  // optional string test_aliasing = 17 [ctype = STRING_PIECE];
  bool has_test_aliasing() const;
  private:
  bool _internal_has_test_aliasing() const;
  public:
  void clear_test_aliasing();
 private:
  // Hidden due to unknown ctype option.
  const std::string& test_aliasing() const;
  void set_test_aliasing(const std::string& value);
  void set_test_aliasing(std::string&& value);
  void set_test_aliasing(const char* value);
  void set_test_aliasing(const char* value, size_t size);
  std::string* mutable_test_aliasing();
  std::string* release_test_aliasing();
  void set_allocated_test_aliasing(std::string* test_aliasing);
  private:
  const std::string& _internal_test_aliasing() const;
  void _internal_set_test_aliasing(const std::string& value);
  std::string* _internal_mutable_test_aliasing();
  public:
 public:

  // optional .proto2_wireformat_unittest.TestMessageSet recursive = 16;
  bool has_recursive() const;
  private:
  bool _internal_has_recursive() const;
  public:
  void clear_recursive();
  const ::proto2_wireformat_unittest::TestMessageSet& recursive() const;
  ::proto2_wireformat_unittest::TestMessageSet* release_recursive();
  ::proto2_wireformat_unittest::TestMessageSet* mutable_recursive();
  void set_allocated_recursive(::proto2_wireformat_unittest::TestMessageSet* recursive);
  private:
  const ::proto2_wireformat_unittest::TestMessageSet& _internal_recursive() const;
  ::proto2_wireformat_unittest::TestMessageSet* _internal_mutable_recursive();
  public:
  void unsafe_arena_set_allocated_recursive(
      ::proto2_wireformat_unittest::TestMessageSet* recursive);
  ::proto2_wireformat_unittest::TestMessageSet* unsafe_arena_release_recursive();

  // optional int32 i = 15;
  bool has_i() const;
  private:
  bool _internal_has_i() const;
  public:
  void clear_i();
  ::PROTOBUF_NAMESPACE_ID::int32 i() const;
  void set_i(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_i() const;
  void _internal_set_i(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  static const int kMessageSetExtensionFieldNumber = 1545008;
  static ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::proto2_wireformat_unittest::TestMessageSet,
      ::PROTOBUF_NAMESPACE_ID::internal::MessageTypeTraits< ::protobuf_unittest::TestMessageSetExtension1 >, 11, false >
    message_set_extension;
  // @@protoc_insertion_point(class_scope:protobuf_unittest.TestMessageSetExtension1)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr test_aliasing_;
  ::proto2_wireformat_unittest::TestMessageSet* recursive_;
  ::PROTOBUF_NAMESPACE_ID::int32 i_;
  friend struct ::TableStruct_google_2fprotobuf_2funittest_5fmset_2eproto;
};
// -------------------------------------------------------------------

class TestMessageSetExtension2 PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf_unittest.TestMessageSetExtension2) */ {
 public:
  inline TestMessageSetExtension2() : TestMessageSetExtension2(nullptr) {}
  virtual ~TestMessageSetExtension2();

  TestMessageSetExtension2(const TestMessageSetExtension2& from);
  TestMessageSetExtension2(TestMessageSetExtension2&& from) noexcept
    : TestMessageSetExtension2() {
    *this = ::std::move(from);
  }

  inline TestMessageSetExtension2& operator=(const TestMessageSetExtension2& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestMessageSetExtension2& operator=(TestMessageSetExtension2&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TestMessageSetExtension2& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TestMessageSetExtension2* internal_default_instance() {
    return reinterpret_cast<const TestMessageSetExtension2*>(
               &_TestMessageSetExtension2_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(TestMessageSetExtension2& a, TestMessageSetExtension2& b) {
    a.Swap(&b);
  }
  inline void Swap(TestMessageSetExtension2* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestMessageSetExtension2* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TestMessageSetExtension2* New() const final {
    return CreateMaybeMessage<TestMessageSetExtension2>(nullptr);
  }

  TestMessageSetExtension2* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TestMessageSetExtension2>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TestMessageSetExtension2& from);
  void MergeFrom(const TestMessageSetExtension2& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TestMessageSetExtension2* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "protobuf_unittest.TestMessageSetExtension2";
  }
  protected:
  explicit TestMessageSetExtension2(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_google_2fprotobuf_2funittest_5fmset_2eproto);
    return ::descriptor_table_google_2fprotobuf_2funittest_5fmset_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStrFieldNumber = 25,
  };
  // optional string str = 25;
  bool has_str() const;
  private:
  bool _internal_has_str() const;
  public:
  void clear_str();
  const std::string& str() const;
  void set_str(const std::string& value);
  void set_str(std::string&& value);
  void set_str(const char* value);
  void set_str(const char* value, size_t size);
  std::string* mutable_str();
  std::string* release_str();
  void set_allocated_str(std::string* str);
  private:
  const std::string& _internal_str() const;
  void _internal_set_str(const std::string& value);
  std::string* _internal_mutable_str();
  public:

  static const int kMessageSetExtensionFieldNumber = 1547769;
  static ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::proto2_wireformat_unittest::TestMessageSet,
      ::PROTOBUF_NAMESPACE_ID::internal::MessageTypeTraits< ::protobuf_unittest::TestMessageSetExtension2 >, 11, false >
    message_set_extension;
  // @@protoc_insertion_point(class_scope:protobuf_unittest.TestMessageSetExtension2)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr str_;
  friend struct ::TableStruct_google_2fprotobuf_2funittest_5fmset_2eproto;
};
// -------------------------------------------------------------------

class RawMessageSet_Item PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf_unittest.RawMessageSet.Item) */ {
 public:
  inline RawMessageSet_Item() : RawMessageSet_Item(nullptr) {}
  virtual ~RawMessageSet_Item();

  RawMessageSet_Item(const RawMessageSet_Item& from);
  RawMessageSet_Item(RawMessageSet_Item&& from) noexcept
    : RawMessageSet_Item() {
    *this = ::std::move(from);
  }

  inline RawMessageSet_Item& operator=(const RawMessageSet_Item& from) {
    CopyFrom(from);
    return *this;
  }
  inline RawMessageSet_Item& operator=(RawMessageSet_Item&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const RawMessageSet_Item& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RawMessageSet_Item* internal_default_instance() {
    return reinterpret_cast<const RawMessageSet_Item*>(
               &_RawMessageSet_Item_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(RawMessageSet_Item& a, RawMessageSet_Item& b) {
    a.Swap(&b);
  }
  inline void Swap(RawMessageSet_Item* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RawMessageSet_Item* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline RawMessageSet_Item* New() const final {
    return CreateMaybeMessage<RawMessageSet_Item>(nullptr);
  }

  RawMessageSet_Item* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<RawMessageSet_Item>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const RawMessageSet_Item& from);
  void MergeFrom(const RawMessageSet_Item& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RawMessageSet_Item* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "protobuf_unittest.RawMessageSet.Item";
  }
  protected:
  explicit RawMessageSet_Item(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_google_2fprotobuf_2funittest_5fmset_2eproto);
    return ::descriptor_table_google_2fprotobuf_2funittest_5fmset_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMessageFieldNumber = 3,
    kTypeIdFieldNumber = 2,
  };
  // required bytes message = 3;
  bool has_message() const;
  private:
  bool _internal_has_message() const;
  public:
  void clear_message();
  const std::string& message() const;
  void set_message(const std::string& value);
  void set_message(std::string&& value);
  void set_message(const char* value);
  void set_message(const void* value, size_t size);
  std::string* mutable_message();
  std::string* release_message();
  void set_allocated_message(std::string* message);
  private:
  const std::string& _internal_message() const;
  void _internal_set_message(const std::string& value);
  std::string* _internal_mutable_message();
  public:

  // required int32 type_id = 2;
  bool has_type_id() const;
  private:
  bool _internal_has_type_id() const;
  public:
  void clear_type_id();
  ::PROTOBUF_NAMESPACE_ID::int32 type_id() const;
  void set_type_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_type_id() const;
  void _internal_set_type_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:protobuf_unittest.RawMessageSet.Item)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr message_;
  ::PROTOBUF_NAMESPACE_ID::int32 type_id_;
  friend struct ::TableStruct_google_2fprotobuf_2funittest_5fmset_2eproto;
};
// -------------------------------------------------------------------

class RawMessageSet PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf_unittest.RawMessageSet) */ {
 public:
  inline RawMessageSet() : RawMessageSet(nullptr) {}
  virtual ~RawMessageSet();

  RawMessageSet(const RawMessageSet& from);
  RawMessageSet(RawMessageSet&& from) noexcept
    : RawMessageSet() {
    *this = ::std::move(from);
  }

  inline RawMessageSet& operator=(const RawMessageSet& from) {
    CopyFrom(from);
    return *this;
  }
  inline RawMessageSet& operator=(RawMessageSet&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const RawMessageSet& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RawMessageSet* internal_default_instance() {
    return reinterpret_cast<const RawMessageSet*>(
               &_RawMessageSet_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(RawMessageSet& a, RawMessageSet& b) {
    a.Swap(&b);
  }
  inline void Swap(RawMessageSet* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RawMessageSet* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline RawMessageSet* New() const final {
    return CreateMaybeMessage<RawMessageSet>(nullptr);
  }

  RawMessageSet* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<RawMessageSet>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const RawMessageSet& from);
  void MergeFrom(const RawMessageSet& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RawMessageSet* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "protobuf_unittest.RawMessageSet";
  }
  protected:
  explicit RawMessageSet(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_google_2fprotobuf_2funittest_5fmset_2eproto);
    return ::descriptor_table_google_2fprotobuf_2funittest_5fmset_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef RawMessageSet_Item Item;

  // accessors -------------------------------------------------------

  enum : int {
    kItemFieldNumber = 1,
  };
  // repeated group Item = 1 { ... };
  int item_size() const;
  private:
  int _internal_item_size() const;
  public:
  void clear_item();
  ::protobuf_unittest::RawMessageSet_Item* mutable_item(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::protobuf_unittest::RawMessageSet_Item >*
      mutable_item();
  private:
  const ::protobuf_unittest::RawMessageSet_Item& _internal_item(int index) const;
  ::protobuf_unittest::RawMessageSet_Item* _internal_add_item();
  public:
  const ::protobuf_unittest::RawMessageSet_Item& item(int index) const;
  ::protobuf_unittest::RawMessageSet_Item* add_item();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::protobuf_unittest::RawMessageSet_Item >&
      item() const;

  // @@protoc_insertion_point(class_scope:protobuf_unittest.RawMessageSet)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::protobuf_unittest::RawMessageSet_Item > item_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fprotobuf_2funittest_5fmset_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// TestMessageSetContainer

// optional .proto2_wireformat_unittest.TestMessageSet message_set = 1;
inline bool TestMessageSetContainer::_internal_has_message_set() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || message_set_ != nullptr);
  return value;
}
inline bool TestMessageSetContainer::has_message_set() const {
  return _internal_has_message_set();
}
inline const ::proto2_wireformat_unittest::TestMessageSet& TestMessageSetContainer::_internal_message_set() const {
  const ::proto2_wireformat_unittest::TestMessageSet* p = message_set_;
  return p != nullptr ? *p : *reinterpret_cast<const ::proto2_wireformat_unittest::TestMessageSet*>(
      &::proto2_wireformat_unittest::_TestMessageSet_default_instance_);
}
inline const ::proto2_wireformat_unittest::TestMessageSet& TestMessageSetContainer::message_set() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestMessageSetContainer.message_set)
  return _internal_message_set();
}
inline void TestMessageSetContainer::unsafe_arena_set_allocated_message_set(
    ::proto2_wireformat_unittest::TestMessageSet* message_set) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(message_set_);
  }
  message_set_ = message_set;
  if (message_set) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_unittest.TestMessageSetContainer.message_set)
}
inline ::proto2_wireformat_unittest::TestMessageSet* TestMessageSetContainer::release_message_set() {
  _has_bits_[0] &= ~0x00000001u;
  ::proto2_wireformat_unittest::TestMessageSet* temp = message_set_;
  message_set_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::proto2_wireformat_unittest::TestMessageSet* TestMessageSetContainer::unsafe_arena_release_message_set() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestMessageSetContainer.message_set)
  _has_bits_[0] &= ~0x00000001u;
  ::proto2_wireformat_unittest::TestMessageSet* temp = message_set_;
  message_set_ = nullptr;
  return temp;
}
inline ::proto2_wireformat_unittest::TestMessageSet* TestMessageSetContainer::_internal_mutable_message_set() {
  _has_bits_[0] |= 0x00000001u;
  if (message_set_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto2_wireformat_unittest::TestMessageSet>(GetArena());
    message_set_ = p;
  }
  return message_set_;
}
inline ::proto2_wireformat_unittest::TestMessageSet* TestMessageSetContainer::mutable_message_set() {
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestMessageSetContainer.message_set)
  return _internal_mutable_message_set();
}
inline void TestMessageSetContainer::set_allocated_message_set(::proto2_wireformat_unittest::TestMessageSet* message_set) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(message_set_);
  }
  if (message_set) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(message_set)->GetArena();
    if (message_arena != submessage_arena) {
      message_set = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, message_set, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  message_set_ = message_set;
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestMessageSetContainer.message_set)
}

// -------------------------------------------------------------------

// TestMessageSetExtension1

// optional int32 i = 15;
inline bool TestMessageSetExtension1::_internal_has_i() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool TestMessageSetExtension1::has_i() const {
  return _internal_has_i();
}
inline void TestMessageSetExtension1::clear_i() {
  i_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TestMessageSetExtension1::_internal_i() const {
  return i_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TestMessageSetExtension1::i() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestMessageSetExtension1.i)
  return _internal_i();
}
inline void TestMessageSetExtension1::_internal_set_i(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  i_ = value;
}
inline void TestMessageSetExtension1::set_i(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_i(value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestMessageSetExtension1.i)
}

// optional .proto2_wireformat_unittest.TestMessageSet recursive = 16;
inline bool TestMessageSetExtension1::_internal_has_recursive() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || recursive_ != nullptr);
  return value;
}
inline bool TestMessageSetExtension1::has_recursive() const {
  return _internal_has_recursive();
}
inline const ::proto2_wireformat_unittest::TestMessageSet& TestMessageSetExtension1::_internal_recursive() const {
  const ::proto2_wireformat_unittest::TestMessageSet* p = recursive_;
  return p != nullptr ? *p : *reinterpret_cast<const ::proto2_wireformat_unittest::TestMessageSet*>(
      &::proto2_wireformat_unittest::_TestMessageSet_default_instance_);
}
inline const ::proto2_wireformat_unittest::TestMessageSet& TestMessageSetExtension1::recursive() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestMessageSetExtension1.recursive)
  return _internal_recursive();
}
inline void TestMessageSetExtension1::unsafe_arena_set_allocated_recursive(
    ::proto2_wireformat_unittest::TestMessageSet* recursive) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(recursive_);
  }
  recursive_ = recursive;
  if (recursive) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_unittest.TestMessageSetExtension1.recursive)
}
inline ::proto2_wireformat_unittest::TestMessageSet* TestMessageSetExtension1::release_recursive() {
  _has_bits_[0] &= ~0x00000002u;
  ::proto2_wireformat_unittest::TestMessageSet* temp = recursive_;
  recursive_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::proto2_wireformat_unittest::TestMessageSet* TestMessageSetExtension1::unsafe_arena_release_recursive() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestMessageSetExtension1.recursive)
  _has_bits_[0] &= ~0x00000002u;
  ::proto2_wireformat_unittest::TestMessageSet* temp = recursive_;
  recursive_ = nullptr;
  return temp;
}
inline ::proto2_wireformat_unittest::TestMessageSet* TestMessageSetExtension1::_internal_mutable_recursive() {
  _has_bits_[0] |= 0x00000002u;
  if (recursive_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto2_wireformat_unittest::TestMessageSet>(GetArena());
    recursive_ = p;
  }
  return recursive_;
}
inline ::proto2_wireformat_unittest::TestMessageSet* TestMessageSetExtension1::mutable_recursive() {
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestMessageSetExtension1.recursive)
  return _internal_mutable_recursive();
}
inline void TestMessageSetExtension1::set_allocated_recursive(::proto2_wireformat_unittest::TestMessageSet* recursive) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(recursive_);
  }
  if (recursive) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(recursive)->GetArena();
    if (message_arena != submessage_arena) {
      recursive = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, recursive, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  recursive_ = recursive;
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestMessageSetExtension1.recursive)
}

// optional string test_aliasing = 17 [ctype = STRING_PIECE];
inline bool TestMessageSetExtension1::_internal_has_test_aliasing() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool TestMessageSetExtension1::has_test_aliasing() const {
  return _internal_has_test_aliasing();
}
inline void TestMessageSetExtension1::clear_test_aliasing() {
  test_aliasing_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& TestMessageSetExtension1::test_aliasing() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestMessageSetExtension1.test_aliasing)
  return _internal_test_aliasing();
}
inline void TestMessageSetExtension1::set_test_aliasing(const std::string& value) {
  _internal_set_test_aliasing(value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestMessageSetExtension1.test_aliasing)
}
inline std::string* TestMessageSetExtension1::mutable_test_aliasing() {
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestMessageSetExtension1.test_aliasing)
  return _internal_mutable_test_aliasing();
}
inline const std::string& TestMessageSetExtension1::_internal_test_aliasing() const {
  return test_aliasing_.Get();
}
inline void TestMessageSetExtension1::_internal_set_test_aliasing(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  test_aliasing_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void TestMessageSetExtension1::set_test_aliasing(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  test_aliasing_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:protobuf_unittest.TestMessageSetExtension1.test_aliasing)
}
inline void TestMessageSetExtension1::set_test_aliasing(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  test_aliasing_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:protobuf_unittest.TestMessageSetExtension1.test_aliasing)
}
inline void TestMessageSetExtension1::set_test_aliasing(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  test_aliasing_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:protobuf_unittest.TestMessageSetExtension1.test_aliasing)
}
inline std::string* TestMessageSetExtension1::_internal_mutable_test_aliasing() {
  _has_bits_[0] |= 0x00000001u;
  return test_aliasing_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* TestMessageSetExtension1::release_test_aliasing() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestMessageSetExtension1.test_aliasing)
  if (!_internal_has_test_aliasing()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return test_aliasing_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void TestMessageSetExtension1::set_allocated_test_aliasing(std::string* test_aliasing) {
  if (test_aliasing != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  test_aliasing_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), test_aliasing,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestMessageSetExtension1.test_aliasing)
}

// -------------------------------------------------------------------

// TestMessageSetExtension2

// optional string str = 25;
inline bool TestMessageSetExtension2::_internal_has_str() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool TestMessageSetExtension2::has_str() const {
  return _internal_has_str();
}
inline void TestMessageSetExtension2::clear_str() {
  str_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& TestMessageSetExtension2::str() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestMessageSetExtension2.str)
  return _internal_str();
}
inline void TestMessageSetExtension2::set_str(const std::string& value) {
  _internal_set_str(value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestMessageSetExtension2.str)
}
inline std::string* TestMessageSetExtension2::mutable_str() {
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestMessageSetExtension2.str)
  return _internal_mutable_str();
}
inline const std::string& TestMessageSetExtension2::_internal_str() const {
  return str_.Get();
}
inline void TestMessageSetExtension2::_internal_set_str(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  str_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void TestMessageSetExtension2::set_str(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  str_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:protobuf_unittest.TestMessageSetExtension2.str)
}
inline void TestMessageSetExtension2::set_str(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  str_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:protobuf_unittest.TestMessageSetExtension2.str)
}
inline void TestMessageSetExtension2::set_str(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  str_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:protobuf_unittest.TestMessageSetExtension2.str)
}
inline std::string* TestMessageSetExtension2::_internal_mutable_str() {
  _has_bits_[0] |= 0x00000001u;
  return str_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* TestMessageSetExtension2::release_str() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestMessageSetExtension2.str)
  if (!_internal_has_str()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return str_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void TestMessageSetExtension2::set_allocated_str(std::string* str) {
  if (str != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  str_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), str,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestMessageSetExtension2.str)
}

// -------------------------------------------------------------------

// RawMessageSet_Item

// required int32 type_id = 2;
inline bool RawMessageSet_Item::_internal_has_type_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool RawMessageSet_Item::has_type_id() const {
  return _internal_has_type_id();
}
inline void RawMessageSet_Item::clear_type_id() {
  type_id_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RawMessageSet_Item::_internal_type_id() const {
  return type_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RawMessageSet_Item::type_id() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.RawMessageSet.Item.type_id)
  return _internal_type_id();
}
inline void RawMessageSet_Item::_internal_set_type_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  type_id_ = value;
}
inline void RawMessageSet_Item::set_type_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_type_id(value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.RawMessageSet.Item.type_id)
}

// required bytes message = 3;
inline bool RawMessageSet_Item::_internal_has_message() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool RawMessageSet_Item::has_message() const {
  return _internal_has_message();
}
inline void RawMessageSet_Item::clear_message() {
  message_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& RawMessageSet_Item::message() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.RawMessageSet.Item.message)
  return _internal_message();
}
inline void RawMessageSet_Item::set_message(const std::string& value) {
  _internal_set_message(value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.RawMessageSet.Item.message)
}
inline std::string* RawMessageSet_Item::mutable_message() {
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.RawMessageSet.Item.message)
  return _internal_mutable_message();
}
inline const std::string& RawMessageSet_Item::_internal_message() const {
  return message_.Get();
}
inline void RawMessageSet_Item::_internal_set_message(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  message_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void RawMessageSet_Item::set_message(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  message_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:protobuf_unittest.RawMessageSet.Item.message)
}
inline void RawMessageSet_Item::set_message(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  message_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:protobuf_unittest.RawMessageSet.Item.message)
}
inline void RawMessageSet_Item::set_message(const void* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  message_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:protobuf_unittest.RawMessageSet.Item.message)
}
inline std::string* RawMessageSet_Item::_internal_mutable_message() {
  _has_bits_[0] |= 0x00000001u;
  return message_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* RawMessageSet_Item::release_message() {
  // @@protoc_insertion_point(field_release:protobuf_unittest.RawMessageSet.Item.message)
  if (!_internal_has_message()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return message_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void RawMessageSet_Item::set_allocated_message(std::string* message) {
  if (message != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  message_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), message,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.RawMessageSet.Item.message)
}

// -------------------------------------------------------------------

// RawMessageSet

// repeated group Item = 1 { ... };
inline int RawMessageSet::_internal_item_size() const {
  return item_.size();
}
inline int RawMessageSet::item_size() const {
  return _internal_item_size();
}
inline void RawMessageSet::clear_item() {
  item_.Clear();
}
inline ::protobuf_unittest::RawMessageSet_Item* RawMessageSet::mutable_item(int index) {
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.RawMessageSet.item)
  return item_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::protobuf_unittest::RawMessageSet_Item >*
RawMessageSet::mutable_item() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.RawMessageSet.item)
  return &item_;
}
inline const ::protobuf_unittest::RawMessageSet_Item& RawMessageSet::_internal_item(int index) const {
  return item_.Get(index);
}
inline const ::protobuf_unittest::RawMessageSet_Item& RawMessageSet::item(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.RawMessageSet.item)
  return _internal_item(index);
}
inline ::protobuf_unittest::RawMessageSet_Item* RawMessageSet::_internal_add_item() {
  return item_.Add();
}
inline ::protobuf_unittest::RawMessageSet_Item* RawMessageSet::add_item() {
  // @@protoc_insertion_point(field_add:protobuf_unittest.RawMessageSet.item)
  return _internal_add_item();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::protobuf_unittest::RawMessageSet_Item >&
RawMessageSet::item() const {
  // @@protoc_insertion_point(field_list:protobuf_unittest.RawMessageSet.item)
  return item_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace protobuf_unittest

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_google_2fprotobuf_2funittest_5fmset_2eproto
