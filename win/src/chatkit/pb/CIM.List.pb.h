// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CIM.List.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_CIM_2eList_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_CIM_2eList_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3013000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3013000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include "CIM.Def.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_CIM_2eList_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_CIM_2eList_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[4]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
namespace CIM {
namespace List {
class CIMGetMsgListReq;
class CIMGetMsgListReqDefaultTypeInternal;
extern CIMGetMsgListReqDefaultTypeInternal _CIMGetMsgListReq_default_instance_;
class CIMGetMsgListRsp;
class CIMGetMsgListRspDefaultTypeInternal;
extern CIMGetMsgListRspDefaultTypeInternal _CIMGetMsgListRsp_default_instance_;
class CIMRecentContactSessionReq;
class CIMRecentContactSessionReqDefaultTypeInternal;
extern CIMRecentContactSessionReqDefaultTypeInternal _CIMRecentContactSessionReq_default_instance_;
class CIMRecentContactSessionRsp;
class CIMRecentContactSessionRspDefaultTypeInternal;
extern CIMRecentContactSessionRspDefaultTypeInternal _CIMRecentContactSessionRsp_default_instance_;
}  // namespace List
}  // namespace CIM
PROTOBUF_NAMESPACE_OPEN
template<> ::CIM::List::CIMGetMsgListReq* Arena::CreateMaybeMessage<::CIM::List::CIMGetMsgListReq>(Arena*);
template<> ::CIM::List::CIMGetMsgListRsp* Arena::CreateMaybeMessage<::CIM::List::CIMGetMsgListRsp>(Arena*);
template<> ::CIM::List::CIMRecentContactSessionReq* Arena::CreateMaybeMessage<::CIM::List::CIMRecentContactSessionReq>(Arena*);
template<> ::CIM::List::CIMRecentContactSessionRsp* Arena::CreateMaybeMessage<::CIM::List::CIMRecentContactSessionRsp>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace CIM {
namespace List {

// ===================================================================

class CIMRecentContactSessionReq PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:CIM.List.CIMRecentContactSessionReq) */ {
 public:
  inline CIMRecentContactSessionReq() : CIMRecentContactSessionReq(nullptr) {}
  virtual ~CIMRecentContactSessionReq();

  CIMRecentContactSessionReq(const CIMRecentContactSessionReq& from);
  CIMRecentContactSessionReq(CIMRecentContactSessionReq&& from) noexcept
    : CIMRecentContactSessionReq() {
    *this = ::std::move(from);
  }

  inline CIMRecentContactSessionReq& operator=(const CIMRecentContactSessionReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline CIMRecentContactSessionReq& operator=(CIMRecentContactSessionReq&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const CIMRecentContactSessionReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CIMRecentContactSessionReq* internal_default_instance() {
    return reinterpret_cast<const CIMRecentContactSessionReq*>(
               &_CIMRecentContactSessionReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(CIMRecentContactSessionReq& a, CIMRecentContactSessionReq& b) {
    a.Swap(&b);
  }
  inline void Swap(CIMRecentContactSessionReq* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CIMRecentContactSessionReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CIMRecentContactSessionReq* New() const final {
    return CreateMaybeMessage<CIMRecentContactSessionReq>(nullptr);
  }

  CIMRecentContactSessionReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CIMRecentContactSessionReq>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const CIMRecentContactSessionReq& from);
  void MergeFrom(const CIMRecentContactSessionReq& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CIMRecentContactSessionReq* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CIM.List.CIMRecentContactSessionReq";
  }
  protected:
  explicit CIMRecentContactSessionReq(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUserIdFieldNumber = 1,
    kLatestUpdateTimeFieldNumber = 2,
  };
  // uint64 user_id = 1;
  void clear_user_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 user_id() const;
  void set_user_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_user_id() const;
  void _internal_set_user_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint32 latest_update_time = 2;
  void clear_latest_update_time();
  ::PROTOBUF_NAMESPACE_ID::uint32 latest_update_time() const;
  void set_latest_update_time(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_latest_update_time() const;
  void _internal_set_latest_update_time(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CIM.List.CIMRecentContactSessionReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 user_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 latest_update_time_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_CIM_2eList_2eproto;
};
// -------------------------------------------------------------------

class CIMRecentContactSessionRsp PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:CIM.List.CIMRecentContactSessionRsp) */ {
 public:
  inline CIMRecentContactSessionRsp() : CIMRecentContactSessionRsp(nullptr) {}
  virtual ~CIMRecentContactSessionRsp();

  CIMRecentContactSessionRsp(const CIMRecentContactSessionRsp& from);
  CIMRecentContactSessionRsp(CIMRecentContactSessionRsp&& from) noexcept
    : CIMRecentContactSessionRsp() {
    *this = ::std::move(from);
  }

  inline CIMRecentContactSessionRsp& operator=(const CIMRecentContactSessionRsp& from) {
    CopyFrom(from);
    return *this;
  }
  inline CIMRecentContactSessionRsp& operator=(CIMRecentContactSessionRsp&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const CIMRecentContactSessionRsp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CIMRecentContactSessionRsp* internal_default_instance() {
    return reinterpret_cast<const CIMRecentContactSessionRsp*>(
               &_CIMRecentContactSessionRsp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(CIMRecentContactSessionRsp& a, CIMRecentContactSessionRsp& b) {
    a.Swap(&b);
  }
  inline void Swap(CIMRecentContactSessionRsp* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CIMRecentContactSessionRsp* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CIMRecentContactSessionRsp* New() const final {
    return CreateMaybeMessage<CIMRecentContactSessionRsp>(nullptr);
  }

  CIMRecentContactSessionRsp* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CIMRecentContactSessionRsp>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const CIMRecentContactSessionRsp& from);
  void MergeFrom(const CIMRecentContactSessionRsp& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CIMRecentContactSessionRsp* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CIM.List.CIMRecentContactSessionRsp";
  }
  protected:
  explicit CIMRecentContactSessionRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kContactSessionListFieldNumber = 3,
    kUserIdFieldNumber = 1,
    kUnreadCountsFieldNumber = 2,
  };
  // repeated .CIM.Def.CIMContactSessionInfo contact_session_list = 3;
  int contact_session_list_size() const;
  private:
  int _internal_contact_session_list_size() const;
  public:
  void clear_contact_session_list();
  ::CIM::Def::CIMContactSessionInfo* mutable_contact_session_list(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CIM::Def::CIMContactSessionInfo >*
      mutable_contact_session_list();
  private:
  const ::CIM::Def::CIMContactSessionInfo& _internal_contact_session_list(int index) const;
  ::CIM::Def::CIMContactSessionInfo* _internal_add_contact_session_list();
  public:
  const ::CIM::Def::CIMContactSessionInfo& contact_session_list(int index) const;
  ::CIM::Def::CIMContactSessionInfo* add_contact_session_list();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CIM::Def::CIMContactSessionInfo >&
      contact_session_list() const;

  // uint64 user_id = 1;
  void clear_user_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 user_id() const;
  void set_user_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_user_id() const;
  void _internal_set_user_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint32 unread_counts = 2;
  void clear_unread_counts();
  ::PROTOBUF_NAMESPACE_ID::uint32 unread_counts() const;
  void set_unread_counts(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_unread_counts() const;
  void _internal_set_unread_counts(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CIM.List.CIMRecentContactSessionRsp)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CIM::Def::CIMContactSessionInfo > contact_session_list_;
  ::PROTOBUF_NAMESPACE_ID::uint64 user_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 unread_counts_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_CIM_2eList_2eproto;
};
// -------------------------------------------------------------------

class CIMGetMsgListReq PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:CIM.List.CIMGetMsgListReq) */ {
 public:
  inline CIMGetMsgListReq() : CIMGetMsgListReq(nullptr) {}
  virtual ~CIMGetMsgListReq();

  CIMGetMsgListReq(const CIMGetMsgListReq& from);
  CIMGetMsgListReq(CIMGetMsgListReq&& from) noexcept
    : CIMGetMsgListReq() {
    *this = ::std::move(from);
  }

  inline CIMGetMsgListReq& operator=(const CIMGetMsgListReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline CIMGetMsgListReq& operator=(CIMGetMsgListReq&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const CIMGetMsgListReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CIMGetMsgListReq* internal_default_instance() {
    return reinterpret_cast<const CIMGetMsgListReq*>(
               &_CIMGetMsgListReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(CIMGetMsgListReq& a, CIMGetMsgListReq& b) {
    a.Swap(&b);
  }
  inline void Swap(CIMGetMsgListReq* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CIMGetMsgListReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CIMGetMsgListReq* New() const final {
    return CreateMaybeMessage<CIMGetMsgListReq>(nullptr);
  }

  CIMGetMsgListReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CIMGetMsgListReq>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const CIMGetMsgListReq& from);
  void MergeFrom(const CIMGetMsgListReq& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CIMGetMsgListReq* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CIM.List.CIMGetMsgListReq";
  }
  protected:
  explicit CIMGetMsgListReq(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUserIdFieldNumber = 1,
    kSessionIdFieldNumber = 3,
    kEndMsgIdFieldNumber = 4,
    kSessionTypeFieldNumber = 2,
    kLimitCountFieldNumber = 6,
  };
  // uint64 user_id = 1;
  void clear_user_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 user_id() const;
  void set_user_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_user_id() const;
  void _internal_set_user_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 session_id = 3;
  void clear_session_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 session_id() const;
  void set_session_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_session_id() const;
  void _internal_set_session_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 end_msg_id = 4;
  void clear_end_msg_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 end_msg_id() const;
  void set_end_msg_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_end_msg_id() const;
  void _internal_set_end_msg_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // .CIM.Def.CIMSessionType session_type = 2;
  void clear_session_type();
  ::CIM::Def::CIMSessionType session_type() const;
  void set_session_type(::CIM::Def::CIMSessionType value);
  private:
  ::CIM::Def::CIMSessionType _internal_session_type() const;
  void _internal_set_session_type(::CIM::Def::CIMSessionType value);
  public:

  // uint32 limit_count = 6;
  void clear_limit_count();
  ::PROTOBUF_NAMESPACE_ID::uint32 limit_count() const;
  void set_limit_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_limit_count() const;
  void _internal_set_limit_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CIM.List.CIMGetMsgListReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 user_id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 session_id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 end_msg_id_;
  int session_type_;
  ::PROTOBUF_NAMESPACE_ID::uint32 limit_count_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_CIM_2eList_2eproto;
};
// -------------------------------------------------------------------

class CIMGetMsgListRsp PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:CIM.List.CIMGetMsgListRsp) */ {
 public:
  inline CIMGetMsgListRsp() : CIMGetMsgListRsp(nullptr) {}
  virtual ~CIMGetMsgListRsp();

  CIMGetMsgListRsp(const CIMGetMsgListRsp& from);
  CIMGetMsgListRsp(CIMGetMsgListRsp&& from) noexcept
    : CIMGetMsgListRsp() {
    *this = ::std::move(from);
  }

  inline CIMGetMsgListRsp& operator=(const CIMGetMsgListRsp& from) {
    CopyFrom(from);
    return *this;
  }
  inline CIMGetMsgListRsp& operator=(CIMGetMsgListRsp&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const CIMGetMsgListRsp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CIMGetMsgListRsp* internal_default_instance() {
    return reinterpret_cast<const CIMGetMsgListRsp*>(
               &_CIMGetMsgListRsp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(CIMGetMsgListRsp& a, CIMGetMsgListRsp& b) {
    a.Swap(&b);
  }
  inline void Swap(CIMGetMsgListRsp* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CIMGetMsgListRsp* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CIMGetMsgListRsp* New() const final {
    return CreateMaybeMessage<CIMGetMsgListRsp>(nullptr);
  }

  CIMGetMsgListRsp* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CIMGetMsgListRsp>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const CIMGetMsgListRsp& from);
  void MergeFrom(const CIMGetMsgListRsp& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CIMGetMsgListRsp* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CIM.List.CIMGetMsgListRsp";
  }
  protected:
  explicit CIMGetMsgListRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMsgListFieldNumber = 6,
    kUserIdFieldNumber = 1,
    kSessionIdFieldNumber = 3,
    kEndMsgIdFieldNumber = 4,
    kSessionTypeFieldNumber = 2,
  };
  // repeated .CIM.Def.CIMMsgInfo msg_list = 6;
  int msg_list_size() const;
  private:
  int _internal_msg_list_size() const;
  public:
  void clear_msg_list();
  ::CIM::Def::CIMMsgInfo* mutable_msg_list(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CIM::Def::CIMMsgInfo >*
      mutable_msg_list();
  private:
  const ::CIM::Def::CIMMsgInfo& _internal_msg_list(int index) const;
  ::CIM::Def::CIMMsgInfo* _internal_add_msg_list();
  public:
  const ::CIM::Def::CIMMsgInfo& msg_list(int index) const;
  ::CIM::Def::CIMMsgInfo* add_msg_list();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CIM::Def::CIMMsgInfo >&
      msg_list() const;

  // uint64 user_id = 1;
  void clear_user_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 user_id() const;
  void set_user_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_user_id() const;
  void _internal_set_user_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 session_id = 3;
  void clear_session_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 session_id() const;
  void set_session_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_session_id() const;
  void _internal_set_session_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 end_msg_id = 4;
  void clear_end_msg_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 end_msg_id() const;
  void set_end_msg_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_end_msg_id() const;
  void _internal_set_end_msg_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // .CIM.Def.CIMSessionType session_type = 2;
  void clear_session_type();
  ::CIM::Def::CIMSessionType session_type() const;
  void set_session_type(::CIM::Def::CIMSessionType value);
  private:
  ::CIM::Def::CIMSessionType _internal_session_type() const;
  void _internal_set_session_type(::CIM::Def::CIMSessionType value);
  public:

  // @@protoc_insertion_point(class_scope:CIM.List.CIMGetMsgListRsp)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CIM::Def::CIMMsgInfo > msg_list_;
  ::PROTOBUF_NAMESPACE_ID::uint64 user_id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 session_id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 end_msg_id_;
  int session_type_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_CIM_2eList_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CIMRecentContactSessionReq

// uint64 user_id = 1;
inline void CIMRecentContactSessionReq::clear_user_id() {
  user_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CIMRecentContactSessionReq::_internal_user_id() const {
  return user_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CIMRecentContactSessionReq::user_id() const {
  // @@protoc_insertion_point(field_get:CIM.List.CIMRecentContactSessionReq.user_id)
  return _internal_user_id();
}
inline void CIMRecentContactSessionReq::_internal_set_user_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  user_id_ = value;
}
inline void CIMRecentContactSessionReq::set_user_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_user_id(value);
  // @@protoc_insertion_point(field_set:CIM.List.CIMRecentContactSessionReq.user_id)
}

// uint32 latest_update_time = 2;
inline void CIMRecentContactSessionReq::clear_latest_update_time() {
  latest_update_time_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CIMRecentContactSessionReq::_internal_latest_update_time() const {
  return latest_update_time_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CIMRecentContactSessionReq::latest_update_time() const {
  // @@protoc_insertion_point(field_get:CIM.List.CIMRecentContactSessionReq.latest_update_time)
  return _internal_latest_update_time();
}
inline void CIMRecentContactSessionReq::_internal_set_latest_update_time(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  latest_update_time_ = value;
}
inline void CIMRecentContactSessionReq::set_latest_update_time(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_latest_update_time(value);
  // @@protoc_insertion_point(field_set:CIM.List.CIMRecentContactSessionReq.latest_update_time)
}

// -------------------------------------------------------------------

// CIMRecentContactSessionRsp

// uint64 user_id = 1;
inline void CIMRecentContactSessionRsp::clear_user_id() {
  user_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CIMRecentContactSessionRsp::_internal_user_id() const {
  return user_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CIMRecentContactSessionRsp::user_id() const {
  // @@protoc_insertion_point(field_get:CIM.List.CIMRecentContactSessionRsp.user_id)
  return _internal_user_id();
}
inline void CIMRecentContactSessionRsp::_internal_set_user_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  user_id_ = value;
}
inline void CIMRecentContactSessionRsp::set_user_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_user_id(value);
  // @@protoc_insertion_point(field_set:CIM.List.CIMRecentContactSessionRsp.user_id)
}

// uint32 unread_counts = 2;
inline void CIMRecentContactSessionRsp::clear_unread_counts() {
  unread_counts_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CIMRecentContactSessionRsp::_internal_unread_counts() const {
  return unread_counts_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CIMRecentContactSessionRsp::unread_counts() const {
  // @@protoc_insertion_point(field_get:CIM.List.CIMRecentContactSessionRsp.unread_counts)
  return _internal_unread_counts();
}
inline void CIMRecentContactSessionRsp::_internal_set_unread_counts(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  unread_counts_ = value;
}
inline void CIMRecentContactSessionRsp::set_unread_counts(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_unread_counts(value);
  // @@protoc_insertion_point(field_set:CIM.List.CIMRecentContactSessionRsp.unread_counts)
}

// repeated .CIM.Def.CIMContactSessionInfo contact_session_list = 3;
inline int CIMRecentContactSessionRsp::_internal_contact_session_list_size() const {
  return contact_session_list_.size();
}
inline int CIMRecentContactSessionRsp::contact_session_list_size() const {
  return _internal_contact_session_list_size();
}
inline ::CIM::Def::CIMContactSessionInfo* CIMRecentContactSessionRsp::mutable_contact_session_list(int index) {
  // @@protoc_insertion_point(field_mutable:CIM.List.CIMRecentContactSessionRsp.contact_session_list)
  return contact_session_list_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CIM::Def::CIMContactSessionInfo >*
CIMRecentContactSessionRsp::mutable_contact_session_list() {
  // @@protoc_insertion_point(field_mutable_list:CIM.List.CIMRecentContactSessionRsp.contact_session_list)
  return &contact_session_list_;
}
inline const ::CIM::Def::CIMContactSessionInfo& CIMRecentContactSessionRsp::_internal_contact_session_list(int index) const {
  return contact_session_list_.Get(index);
}
inline const ::CIM::Def::CIMContactSessionInfo& CIMRecentContactSessionRsp::contact_session_list(int index) const {
  // @@protoc_insertion_point(field_get:CIM.List.CIMRecentContactSessionRsp.contact_session_list)
  return _internal_contact_session_list(index);
}
inline ::CIM::Def::CIMContactSessionInfo* CIMRecentContactSessionRsp::_internal_add_contact_session_list() {
  return contact_session_list_.Add();
}
inline ::CIM::Def::CIMContactSessionInfo* CIMRecentContactSessionRsp::add_contact_session_list() {
  // @@protoc_insertion_point(field_add:CIM.List.CIMRecentContactSessionRsp.contact_session_list)
  return _internal_add_contact_session_list();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CIM::Def::CIMContactSessionInfo >&
CIMRecentContactSessionRsp::contact_session_list() const {
  // @@protoc_insertion_point(field_list:CIM.List.CIMRecentContactSessionRsp.contact_session_list)
  return contact_session_list_;
}

// -------------------------------------------------------------------

// CIMGetMsgListReq

// uint64 user_id = 1;
inline void CIMGetMsgListReq::clear_user_id() {
  user_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CIMGetMsgListReq::_internal_user_id() const {
  return user_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CIMGetMsgListReq::user_id() const {
  // @@protoc_insertion_point(field_get:CIM.List.CIMGetMsgListReq.user_id)
  return _internal_user_id();
}
inline void CIMGetMsgListReq::_internal_set_user_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  user_id_ = value;
}
inline void CIMGetMsgListReq::set_user_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_user_id(value);
  // @@protoc_insertion_point(field_set:CIM.List.CIMGetMsgListReq.user_id)
}

// .CIM.Def.CIMSessionType session_type = 2;
inline void CIMGetMsgListReq::clear_session_type() {
  session_type_ = 0;
}
inline ::CIM::Def::CIMSessionType CIMGetMsgListReq::_internal_session_type() const {
  return static_cast< ::CIM::Def::CIMSessionType >(session_type_);
}
inline ::CIM::Def::CIMSessionType CIMGetMsgListReq::session_type() const {
  // @@protoc_insertion_point(field_get:CIM.List.CIMGetMsgListReq.session_type)
  return _internal_session_type();
}
inline void CIMGetMsgListReq::_internal_set_session_type(::CIM::Def::CIMSessionType value) {
  
  session_type_ = value;
}
inline void CIMGetMsgListReq::set_session_type(::CIM::Def::CIMSessionType value) {
  _internal_set_session_type(value);
  // @@protoc_insertion_point(field_set:CIM.List.CIMGetMsgListReq.session_type)
}

// uint64 session_id = 3;
inline void CIMGetMsgListReq::clear_session_id() {
  session_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CIMGetMsgListReq::_internal_session_id() const {
  return session_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CIMGetMsgListReq::session_id() const {
  // @@protoc_insertion_point(field_get:CIM.List.CIMGetMsgListReq.session_id)
  return _internal_session_id();
}
inline void CIMGetMsgListReq::_internal_set_session_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  session_id_ = value;
}
inline void CIMGetMsgListReq::set_session_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_session_id(value);
  // @@protoc_insertion_point(field_set:CIM.List.CIMGetMsgListReq.session_id)
}

// uint64 end_msg_id = 4;
inline void CIMGetMsgListReq::clear_end_msg_id() {
  end_msg_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CIMGetMsgListReq::_internal_end_msg_id() const {
  return end_msg_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CIMGetMsgListReq::end_msg_id() const {
  // @@protoc_insertion_point(field_get:CIM.List.CIMGetMsgListReq.end_msg_id)
  return _internal_end_msg_id();
}
inline void CIMGetMsgListReq::_internal_set_end_msg_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  end_msg_id_ = value;
}
inline void CIMGetMsgListReq::set_end_msg_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_end_msg_id(value);
  // @@protoc_insertion_point(field_set:CIM.List.CIMGetMsgListReq.end_msg_id)
}

// uint32 limit_count = 6;
inline void CIMGetMsgListReq::clear_limit_count() {
  limit_count_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CIMGetMsgListReq::_internal_limit_count() const {
  return limit_count_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CIMGetMsgListReq::limit_count() const {
  // @@protoc_insertion_point(field_get:CIM.List.CIMGetMsgListReq.limit_count)
  return _internal_limit_count();
}
inline void CIMGetMsgListReq::_internal_set_limit_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  limit_count_ = value;
}
inline void CIMGetMsgListReq::set_limit_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_limit_count(value);
  // @@protoc_insertion_point(field_set:CIM.List.CIMGetMsgListReq.limit_count)
}

// -------------------------------------------------------------------

// CIMGetMsgListRsp

// uint64 user_id = 1;
inline void CIMGetMsgListRsp::clear_user_id() {
  user_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CIMGetMsgListRsp::_internal_user_id() const {
  return user_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CIMGetMsgListRsp::user_id() const {
  // @@protoc_insertion_point(field_get:CIM.List.CIMGetMsgListRsp.user_id)
  return _internal_user_id();
}
inline void CIMGetMsgListRsp::_internal_set_user_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  user_id_ = value;
}
inline void CIMGetMsgListRsp::set_user_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_user_id(value);
  // @@protoc_insertion_point(field_set:CIM.List.CIMGetMsgListRsp.user_id)
}

// .CIM.Def.CIMSessionType session_type = 2;
inline void CIMGetMsgListRsp::clear_session_type() {
  session_type_ = 0;
}
inline ::CIM::Def::CIMSessionType CIMGetMsgListRsp::_internal_session_type() const {
  return static_cast< ::CIM::Def::CIMSessionType >(session_type_);
}
inline ::CIM::Def::CIMSessionType CIMGetMsgListRsp::session_type() const {
  // @@protoc_insertion_point(field_get:CIM.List.CIMGetMsgListRsp.session_type)
  return _internal_session_type();
}
inline void CIMGetMsgListRsp::_internal_set_session_type(::CIM::Def::CIMSessionType value) {
  
  session_type_ = value;
}
inline void CIMGetMsgListRsp::set_session_type(::CIM::Def::CIMSessionType value) {
  _internal_set_session_type(value);
  // @@protoc_insertion_point(field_set:CIM.List.CIMGetMsgListRsp.session_type)
}

// uint64 session_id = 3;
inline void CIMGetMsgListRsp::clear_session_id() {
  session_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CIMGetMsgListRsp::_internal_session_id() const {
  return session_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CIMGetMsgListRsp::session_id() const {
  // @@protoc_insertion_point(field_get:CIM.List.CIMGetMsgListRsp.session_id)
  return _internal_session_id();
}
inline void CIMGetMsgListRsp::_internal_set_session_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  session_id_ = value;
}
inline void CIMGetMsgListRsp::set_session_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_session_id(value);
  // @@protoc_insertion_point(field_set:CIM.List.CIMGetMsgListRsp.session_id)
}

// uint64 end_msg_id = 4;
inline void CIMGetMsgListRsp::clear_end_msg_id() {
  end_msg_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CIMGetMsgListRsp::_internal_end_msg_id() const {
  return end_msg_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CIMGetMsgListRsp::end_msg_id() const {
  // @@protoc_insertion_point(field_get:CIM.List.CIMGetMsgListRsp.end_msg_id)
  return _internal_end_msg_id();
}
inline void CIMGetMsgListRsp::_internal_set_end_msg_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  end_msg_id_ = value;
}
inline void CIMGetMsgListRsp::set_end_msg_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_end_msg_id(value);
  // @@protoc_insertion_point(field_set:CIM.List.CIMGetMsgListRsp.end_msg_id)
}

// repeated .CIM.Def.CIMMsgInfo msg_list = 6;
inline int CIMGetMsgListRsp::_internal_msg_list_size() const {
  return msg_list_.size();
}
inline int CIMGetMsgListRsp::msg_list_size() const {
  return _internal_msg_list_size();
}
inline ::CIM::Def::CIMMsgInfo* CIMGetMsgListRsp::mutable_msg_list(int index) {
  // @@protoc_insertion_point(field_mutable:CIM.List.CIMGetMsgListRsp.msg_list)
  return msg_list_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CIM::Def::CIMMsgInfo >*
CIMGetMsgListRsp::mutable_msg_list() {
  // @@protoc_insertion_point(field_mutable_list:CIM.List.CIMGetMsgListRsp.msg_list)
  return &msg_list_;
}
inline const ::CIM::Def::CIMMsgInfo& CIMGetMsgListRsp::_internal_msg_list(int index) const {
  return msg_list_.Get(index);
}
inline const ::CIM::Def::CIMMsgInfo& CIMGetMsgListRsp::msg_list(int index) const {
  // @@protoc_insertion_point(field_get:CIM.List.CIMGetMsgListRsp.msg_list)
  return _internal_msg_list(index);
}
inline ::CIM::Def::CIMMsgInfo* CIMGetMsgListRsp::_internal_add_msg_list() {
  return msg_list_.Add();
}
inline ::CIM::Def::CIMMsgInfo* CIMGetMsgListRsp::add_msg_list() {
  // @@protoc_insertion_point(field_add:CIM.List.CIMGetMsgListRsp.msg_list)
  return _internal_add_msg_list();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CIM::Def::CIMMsgInfo >&
CIMGetMsgListRsp::msg_list() const {
  // @@protoc_insertion_point(field_list:CIM.List.CIMGetMsgListRsp.msg_list)
  return msg_list_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace List
}  // namespace CIM

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_CIM_2eList_2eproto
